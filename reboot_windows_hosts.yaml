---
- name: ansible win_reboot module demo
  Hosts: all
  become: false
  gather_facts: false
  Tasks:
     - name: reboot Windows Host(s)
       ansible.windows.win_reboot:
          msg: "reboot by ansible"
          pre_reboot_delay: 5
          post_reboot_delay: 10

#--- win_reboot ansible docs exemple ---

- name: Reboot the machine with all defaults
  win_reboot:

- name: Reboot a slow machine that might have lots of updates to apply
  win_reboot:
    reboot_timeout: 3600

# Install a Windows feature and reboot if necessary
- name: Install IIS Web-Server
  win_feature:
    name: Web-Server
  register: iis_install

- name: Reboot when Web-Server feature requires it
  win_reboot:
  when: iis_install.reboot_required

# One way to ensure the system is reliable, is to set WinRM to a delayed startup
- name: Ensure WinRM starts when the system has settled and is ready to work reliably
  win_service:
    name: WinRM
    start_mode: delayed


# Additionally, you can add a delay before running the next task
- name: Reboot a machine that takes time to settle after being booted
  win_reboot:
    post_reboot_delay: 120

# Or you can make win_reboot validate exactly what you need to work before running the next task
- name: Validate that the netlogon service has started, before running the next task
  win_reboot:
    test_command: 'exit (Get-Service -Name Netlogon).Status -ne "Running"'
